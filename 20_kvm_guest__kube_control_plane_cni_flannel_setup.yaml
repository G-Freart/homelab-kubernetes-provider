# ------------------------------------------------------------------------------------------ #
#                                                                                            #
#                Copyright (c) 2021 - Gilles Freart. All right reserved                      #
#                                                                                            #
#  Licensed under the MIT License. See LICENSE in the project root for license information.  #
#                                                                                            #
# ------------------------------------------------------------------------------------------ #

- name:     This playbook will configure the cni network plugin to be flannel
  hosts:    control_planes
  run_once: true

  vars_files:
    - vars/default-settings.yaml
    - group_vars/kvm_guest/cloud_images.yaml
    - group_vars/kvm_guest/cni_plugins.yaml
    
  tasks:

    - block:
        - name: Loading CentOS 7 cluster samples
          include_vars:
            file:        vars/testlab_samples/centos-7.yaml
            name:        c7x
        - name: Loading CentOS 8.1 cluster samples
          include_vars:
            file:        vars/testlab_samples/centos-8.1.yaml
            name:        c81
        - name: Loading CentOS 8.2 cluster samples
          include_vars:
            file:        vars/testlab_samples/centos-8.2.yaml
            name:        c82
        - name: Loading CentOS 8.3 cluster samples
          include_vars:
            file:        vars/testlab_samples/centos-8.3.yaml
            name:        c83
        - name: Loading CentOS 8 Stream cluster samples
          include_vars:
            file:        vars/testlab_samples/centos-8-stream.yaml
            name:        c8s
        - name: Loading Ubuntu 18.04 cluster samples
          include_vars:
            file:        vars/testlab_samples/ubuntu-18.04.yaml
            name:        u1804
        - name: Loading Ubuntu 20.04 cluster samples
          include_vars:
            file:        vars/testlab_samples/ubuntu-20.04.yaml
            name:        u2004
        - name: Loading Ubuntu 20.10 cluster samples
          include_vars:
            file:        vars/testlab_samples/ubuntu-20.10.yaml
            name:        u2010
        - name: Loading Your custom cluster definition
          include_vars:
            file:        vars/clusters.yaml
            name:        custo
        - name: Merging all cluster definitions
          set_fact:
            clusters: "{{ custo | combine(c7x, recursive=True) | combine(c81, recursive=True) | combine(c82, recursive=True) | combine(c83, recursive=True) | combine(c8s, recursive=True) | combine(u1804, recursive=True) | combine(u2004, recursive=True) | combine(u2010, recursive=True) }}"

    - name:  Kube setup flannel network plugin -- Current provisioning facts of the VMs 
      debug:
        var: ansible_local['homelab-kubernetes-provider']

    - name:  Kube setup flannel network plugin -- Configure the first control plane
      block:

        - name:       Kube setup calico network plugin -- Downloading flannel plugin definition
          get_url:    
            url:      "{{ cni_plugins.flannel.k8s_definition_url }}"
            dest:     /tmp/flannel_cni_plugin.yaml

        - name:       "Kube setup flannel network plugin -- Patching flannel plugin : vxvlan -> host-gw"
          replace:
            path:     /tmp/flannel_cni_plugin.yaml
            regexp:   'vxlan'
            replace:  'host-gw'

        - name:       Kube setup flannel network plugin -- Asking to kubernetes to apply the flannel cni plugins
          command:    kubectl apply -f "/tmp/flannel_cni_plugin.yaml"

        - name:       Kube setup flannel network plugin  -- Waiting until flannel pod has been created
          shell:      "kubectl get pods --namespace=kube-system --selector app=flannel --output=jsonpath='{.items[*].metadata.name}'"
          register:   pods_creation_checking
          until:      item in pods_creation_checking.stdout
          delay:      10
          with_items:
            - "kube-flannel-ds"
          retries:    30

        - name:       Kube setup flannel network plugin -- Waiting until flannel pods readiness
          shell:      "kubectl wait pods --namespace=kube-system --selector app=flannel --for=condition=Ready --timeout=600s"
          register:   pods_readiness_checking

        - name:       Kube setup flannel network plugin  -- Waiting until kube-dns pod has been created
          shell:      "kubectl get pods --namespace=kube-system --selector k8s-app=kube-dns --output=jsonpath='{.items[*].metadata.name}'"
          register:   pods_creation_checking
          until:      item in pods_creation_checking.stdout
          delay:      10
          with_items:
            - "coredns"
          retries:    30

        - name:       Kube setup flannel network plugin -- Waiting until kube-dns pods readiness
          shell:      "kubectl wait pods --namespace=kube-system --selector k8s-app=kube-dns --for=condition=Ready --timeout=600s"
          register:   pods_readiness_checking


        - name: Kube setup flannel network plugin -- Storing new state inside the homelab-kubernetes-provider custom fact
          lineinfile:
            path:   /etc/ansible/facts.d/homelab-kubernetes-provider.fact
            line:   kube_network_plugin=flannel
          become:   true
  
        - name: Kube setup flannel network plugin -- Reload the homelab-kubernetes-provider custom fact
          setup:
            filter: ansible_local          

      when: 
        - inventory_hostname == groups['control_planes'][0]
        - clusters.definition[cluster_name].cni_plugin == 'flannel'
        - ansible_local['homelab-kubernetes-provider']['setup']['kube_network_plugin'] is not defined
